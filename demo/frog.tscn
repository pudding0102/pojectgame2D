[gd_scene load_steps=5 format=3 uid="uid://dmq0hnsq75irf"]

[sub_resource type="Shader" id="Shader_gyfqy"]
code = "shader_type canvas_item;
//render_mode unshaded; // optional

// Noise texture
uniform sampler2D noise_texture: repeat_enable, filter_nearest;
// Fog density
uniform float density: hint_range(0.0, 1.0) = 0.25;
// Fog speed
uniform vec2 speed = vec2(0.02, 0.01);


// Called for every pixel the material is visible on
void fragment() {
	// Make the fog slowly move
	vec2 uv = UV + speed * TIME;
	// Sample the noise texture
	float noise = texture(noise_texture, uv).r;
	// Convert the noise from the (0.0, 1.0) range to the (-1.0, 1.0) range
	// and clamp it between 0.0 and 1.0 again
	float fog = clamp(noise * 2.0 - 1.0, 0.0, 1.0);
	// Apply the fog effect
	COLOR.a *= fog * density;
}
"

[sub_resource type="FastNoiseLite" id="FastNoiseLite_whe2r"]
frequency = 0.0075

[sub_resource type="NoiseTexture2D" id="NoiseTexture2D_6ekd3"]
width = 320
height = 180
seamless = true
seamless_blend_skirt = 0.75
noise = SubResource("FastNoiseLite_whe2r")

[sub_resource type="ShaderMaterial" id="ShaderMaterial_slgur"]
shader = SubResource("Shader_gyfqy")
shader_parameter/noise_texture = SubResource("NoiseTexture2D_6ekd3")
shader_parameter/density = 0.25
shader_parameter/speed = Vector2(0.02, 0.01)

[node name="frog" type="ParallaxBackground"]
layer = 2

[node name="ParallaxLayer" type="ParallaxLayer" parent="."]
position = Vector2(2, -1)
scale = Vector2(10, 10)
motion_mirroring = Vector2(320, 180)

[node name="ColorRect" type="ColorRect" parent="ParallaxLayer"]
material = SubResource("ShaderMaterial_slgur")
offset_right = 320.0
offset_bottom = 180.0
